                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module lcd1602
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _lcd_set_cursor
                                     12 	.globl _lcd_write_dat
                                     13 	.globl _lcd_write_cmd
                                     14 	.globl _lcd_wait_ready
                                     15 	.globl _TF2
                                     16 	.globl _EXF2
                                     17 	.globl _RCLK
                                     18 	.globl _TCLK
                                     19 	.globl _EXEN2
                                     20 	.globl _TR2
                                     21 	.globl _C_T2
                                     22 	.globl _CP_RL2
                                     23 	.globl _T2CON_7
                                     24 	.globl _T2CON_6
                                     25 	.globl _T2CON_5
                                     26 	.globl _T2CON_4
                                     27 	.globl _T2CON_3
                                     28 	.globl _T2CON_2
                                     29 	.globl _T2CON_1
                                     30 	.globl _T2CON_0
                                     31 	.globl _PT2
                                     32 	.globl _ET2
                                     33 	.globl _CY
                                     34 	.globl _AC
                                     35 	.globl _F0
                                     36 	.globl _RS1
                                     37 	.globl _RS0
                                     38 	.globl _OV
                                     39 	.globl _F1
                                     40 	.globl _P
                                     41 	.globl _PS
                                     42 	.globl _PT1
                                     43 	.globl _PX1
                                     44 	.globl _PT0
                                     45 	.globl _PX0
                                     46 	.globl _RD
                                     47 	.globl _WR
                                     48 	.globl _T1
                                     49 	.globl _T0
                                     50 	.globl _INT1
                                     51 	.globl _INT0
                                     52 	.globl _TXD
                                     53 	.globl _RXD
                                     54 	.globl _P3_7
                                     55 	.globl _P3_6
                                     56 	.globl _P3_5
                                     57 	.globl _P3_4
                                     58 	.globl _P3_3
                                     59 	.globl _P3_2
                                     60 	.globl _P3_1
                                     61 	.globl _P3_0
                                     62 	.globl _EA
                                     63 	.globl _ES
                                     64 	.globl _ET1
                                     65 	.globl _EX1
                                     66 	.globl _ET0
                                     67 	.globl _EX0
                                     68 	.globl _P2_7
                                     69 	.globl _P2_6
                                     70 	.globl _P2_5
                                     71 	.globl _P2_4
                                     72 	.globl _P2_3
                                     73 	.globl _P2_2
                                     74 	.globl _P2_1
                                     75 	.globl _P2_0
                                     76 	.globl _SM0
                                     77 	.globl _SM1
                                     78 	.globl _SM2
                                     79 	.globl _REN
                                     80 	.globl _TB8
                                     81 	.globl _RB8
                                     82 	.globl _TI
                                     83 	.globl _RI
                                     84 	.globl _P1_7
                                     85 	.globl _P1_6
                                     86 	.globl _P1_5
                                     87 	.globl _P1_4
                                     88 	.globl _P1_3
                                     89 	.globl _P1_2
                                     90 	.globl _P1_1
                                     91 	.globl _P1_0
                                     92 	.globl _TF1
                                     93 	.globl _TR1
                                     94 	.globl _TF0
                                     95 	.globl _TR0
                                     96 	.globl _IE1
                                     97 	.globl _IT1
                                     98 	.globl _IE0
                                     99 	.globl _IT0
                                    100 	.globl _P0_7
                                    101 	.globl _P0_6
                                    102 	.globl _P0_5
                                    103 	.globl _P0_4
                                    104 	.globl _P0_3
                                    105 	.globl _P0_2
                                    106 	.globl _P0_1
                                    107 	.globl _P0_0
                                    108 	.globl _TH2
                                    109 	.globl _TL2
                                    110 	.globl _RCAP2H
                                    111 	.globl _RCAP2L
                                    112 	.globl _T2CON
                                    113 	.globl _B
                                    114 	.globl _ACC
                                    115 	.globl _PSW
                                    116 	.globl _IP
                                    117 	.globl _P3
                                    118 	.globl _IE
                                    119 	.globl _P2
                                    120 	.globl _SBUF
                                    121 	.globl _SCON
                                    122 	.globl _P1
                                    123 	.globl _TH1
                                    124 	.globl _TH0
                                    125 	.globl _TL1
                                    126 	.globl _TL0
                                    127 	.globl _TMOD
                                    128 	.globl _TCON
                                    129 	.globl _PCON
                                    130 	.globl _DPH
                                    131 	.globl _DPL
                                    132 	.globl _SP
                                    133 	.globl _P0
                                    134 	.globl _lcd_show_str_PARM_3
                                    135 	.globl _lcd_show_str_PARM_2
                                    136 	.globl _lcd_set_cursor_PARM_2
                                    137 	.globl _lcd_show_str
                                    138 	.globl _init_lcd1602
                                    139 ;--------------------------------------------------------
                                    140 ; special function registers
                                    141 ;--------------------------------------------------------
                                    142 	.area RSEG    (ABS,DATA)
      000000                        143 	.org 0x0000
                           000080   144 _P0	=	0x0080
                           000081   145 _SP	=	0x0081
                           000082   146 _DPL	=	0x0082
                           000083   147 _DPH	=	0x0083
                           000087   148 _PCON	=	0x0087
                           000088   149 _TCON	=	0x0088
                           000089   150 _TMOD	=	0x0089
                           00008A   151 _TL0	=	0x008a
                           00008B   152 _TL1	=	0x008b
                           00008C   153 _TH0	=	0x008c
                           00008D   154 _TH1	=	0x008d
                           000090   155 _P1	=	0x0090
                           000098   156 _SCON	=	0x0098
                           000099   157 _SBUF	=	0x0099
                           0000A0   158 _P2	=	0x00a0
                           0000A8   159 _IE	=	0x00a8
                           0000B0   160 _P3	=	0x00b0
                           0000B8   161 _IP	=	0x00b8
                           0000D0   162 _PSW	=	0x00d0
                           0000E0   163 _ACC	=	0x00e0
                           0000F0   164 _B	=	0x00f0
                           0000C8   165 _T2CON	=	0x00c8
                           0000CA   166 _RCAP2L	=	0x00ca
                           0000CB   167 _RCAP2H	=	0x00cb
                           0000CC   168 _TL2	=	0x00cc
                           0000CD   169 _TH2	=	0x00cd
                                    170 ;--------------------------------------------------------
                                    171 ; special function bits
                                    172 ;--------------------------------------------------------
                                    173 	.area RSEG    (ABS,DATA)
      000000                        174 	.org 0x0000
                           000080   175 _P0_0	=	0x0080
                           000081   176 _P0_1	=	0x0081
                           000082   177 _P0_2	=	0x0082
                           000083   178 _P0_3	=	0x0083
                           000084   179 _P0_4	=	0x0084
                           000085   180 _P0_5	=	0x0085
                           000086   181 _P0_6	=	0x0086
                           000087   182 _P0_7	=	0x0087
                           000088   183 _IT0	=	0x0088
                           000089   184 _IE0	=	0x0089
                           00008A   185 _IT1	=	0x008a
                           00008B   186 _IE1	=	0x008b
                           00008C   187 _TR0	=	0x008c
                           00008D   188 _TF0	=	0x008d
                           00008E   189 _TR1	=	0x008e
                           00008F   190 _TF1	=	0x008f
                           000090   191 _P1_0	=	0x0090
                           000091   192 _P1_1	=	0x0091
                           000092   193 _P1_2	=	0x0092
                           000093   194 _P1_3	=	0x0093
                           000094   195 _P1_4	=	0x0094
                           000095   196 _P1_5	=	0x0095
                           000096   197 _P1_6	=	0x0096
                           000097   198 _P1_7	=	0x0097
                           000098   199 _RI	=	0x0098
                           000099   200 _TI	=	0x0099
                           00009A   201 _RB8	=	0x009a
                           00009B   202 _TB8	=	0x009b
                           00009C   203 _REN	=	0x009c
                           00009D   204 _SM2	=	0x009d
                           00009E   205 _SM1	=	0x009e
                           00009F   206 _SM0	=	0x009f
                           0000A0   207 _P2_0	=	0x00a0
                           0000A1   208 _P2_1	=	0x00a1
                           0000A2   209 _P2_2	=	0x00a2
                           0000A3   210 _P2_3	=	0x00a3
                           0000A4   211 _P2_4	=	0x00a4
                           0000A5   212 _P2_5	=	0x00a5
                           0000A6   213 _P2_6	=	0x00a6
                           0000A7   214 _P2_7	=	0x00a7
                           0000A8   215 _EX0	=	0x00a8
                           0000A9   216 _ET0	=	0x00a9
                           0000AA   217 _EX1	=	0x00aa
                           0000AB   218 _ET1	=	0x00ab
                           0000AC   219 _ES	=	0x00ac
                           0000AF   220 _EA	=	0x00af
                           0000B0   221 _P3_0	=	0x00b0
                           0000B1   222 _P3_1	=	0x00b1
                           0000B2   223 _P3_2	=	0x00b2
                           0000B3   224 _P3_3	=	0x00b3
                           0000B4   225 _P3_4	=	0x00b4
                           0000B5   226 _P3_5	=	0x00b5
                           0000B6   227 _P3_6	=	0x00b6
                           0000B7   228 _P3_7	=	0x00b7
                           0000B0   229 _RXD	=	0x00b0
                           0000B1   230 _TXD	=	0x00b1
                           0000B2   231 _INT0	=	0x00b2
                           0000B3   232 _INT1	=	0x00b3
                           0000B4   233 _T0	=	0x00b4
                           0000B5   234 _T1	=	0x00b5
                           0000B6   235 _WR	=	0x00b6
                           0000B7   236 _RD	=	0x00b7
                           0000B8   237 _PX0	=	0x00b8
                           0000B9   238 _PT0	=	0x00b9
                           0000BA   239 _PX1	=	0x00ba
                           0000BB   240 _PT1	=	0x00bb
                           0000BC   241 _PS	=	0x00bc
                           0000D0   242 _P	=	0x00d0
                           0000D1   243 _F1	=	0x00d1
                           0000D2   244 _OV	=	0x00d2
                           0000D3   245 _RS0	=	0x00d3
                           0000D4   246 _RS1	=	0x00d4
                           0000D5   247 _F0	=	0x00d5
                           0000D6   248 _AC	=	0x00d6
                           0000D7   249 _CY	=	0x00d7
                           0000AD   250 _ET2	=	0x00ad
                           0000BD   251 _PT2	=	0x00bd
                           0000C8   252 _T2CON_0	=	0x00c8
                           0000C9   253 _T2CON_1	=	0x00c9
                           0000CA   254 _T2CON_2	=	0x00ca
                           0000CB   255 _T2CON_3	=	0x00cb
                           0000CC   256 _T2CON_4	=	0x00cc
                           0000CD   257 _T2CON_5	=	0x00cd
                           0000CE   258 _T2CON_6	=	0x00ce
                           0000CF   259 _T2CON_7	=	0x00cf
                           0000C8   260 _CP_RL2	=	0x00c8
                           0000C9   261 _C_T2	=	0x00c9
                           0000CA   262 _TR2	=	0x00ca
                           0000CB   263 _EXEN2	=	0x00cb
                           0000CC   264 _TCLK	=	0x00cc
                           0000CD   265 _RCLK	=	0x00cd
                           0000CE   266 _EXF2	=	0x00ce
                           0000CF   267 _TF2	=	0x00cf
                                    268 ;--------------------------------------------------------
                                    269 ; overlayable register banks
                                    270 ;--------------------------------------------------------
                                    271 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        272 	.ds 8
                                    273 ;--------------------------------------------------------
                                    274 ; internal ram data
                                    275 ;--------------------------------------------------------
                                    276 	.area DSEG    (DATA)
      000015                        277 _lcd_set_cursor_PARM_2:
      000015                        278 	.ds 1
      000016                        279 _lcd_show_str_PARM_2:
      000016                        280 	.ds 1
      000017                        281 _lcd_show_str_PARM_3:
      000017                        282 	.ds 3
                                    283 ;--------------------------------------------------------
                                    284 ; overlayable items in internal ram 
                                    285 ;--------------------------------------------------------
                                    286 	.area	OSEG    (OVR,DATA)
                                    287 ;--------------------------------------------------------
                                    288 ; indirectly addressable internal ram data
                                    289 ;--------------------------------------------------------
                                    290 	.area ISEG    (DATA)
                                    291 ;--------------------------------------------------------
                                    292 ; absolute internal ram data
                                    293 ;--------------------------------------------------------
                                    294 	.area IABS    (ABS,DATA)
                                    295 	.area IABS    (ABS,DATA)
                                    296 ;--------------------------------------------------------
                                    297 ; bit data
                                    298 ;--------------------------------------------------------
                                    299 	.area BSEG    (BIT)
                                    300 ;--------------------------------------------------------
                                    301 ; paged external ram data
                                    302 ;--------------------------------------------------------
                                    303 	.area PSEG    (PAG,XDATA)
                                    304 ;--------------------------------------------------------
                                    305 ; external ram data
                                    306 ;--------------------------------------------------------
                                    307 	.area XSEG    (XDATA)
                                    308 ;--------------------------------------------------------
                                    309 ; absolute external ram data
                                    310 ;--------------------------------------------------------
                                    311 	.area XABS    (ABS,XDATA)
                                    312 ;--------------------------------------------------------
                                    313 ; external initialized ram data
                                    314 ;--------------------------------------------------------
                                    315 	.area XISEG   (XDATA)
                                    316 	.area HOME    (CODE)
                                    317 	.area GSINIT0 (CODE)
                                    318 	.area GSINIT1 (CODE)
                                    319 	.area GSINIT2 (CODE)
                                    320 	.area GSINIT3 (CODE)
                                    321 	.area GSINIT4 (CODE)
                                    322 	.area GSINIT5 (CODE)
                                    323 	.area GSINIT  (CODE)
                                    324 	.area GSFINAL (CODE)
                                    325 	.area CSEG    (CODE)
                                    326 ;--------------------------------------------------------
                                    327 ; global & static initialisations
                                    328 ;--------------------------------------------------------
                                    329 	.area HOME    (CODE)
                                    330 	.area GSINIT  (CODE)
                                    331 	.area GSFINAL (CODE)
                                    332 	.area GSINIT  (CODE)
                                    333 ;--------------------------------------------------------
                                    334 ; Home
                                    335 ;--------------------------------------------------------
                                    336 	.area HOME    (CODE)
                                    337 	.area HOME    (CODE)
                                    338 ;--------------------------------------------------------
                                    339 ; code
                                    340 ;--------------------------------------------------------
                                    341 	.area CSEG    (CODE)
                                    342 ;------------------------------------------------------------
                                    343 ;Allocation info for local variables in function 'lcd_wait_ready'
                                    344 ;------------------------------------------------------------
                                    345 ;sta                       Allocated to registers r7 
                                    346 ;------------------------------------------------------------
                                    347 ;	lcd1602.c:3: void lcd_wait_ready(void)
                                    348 ;	-----------------------------------------
                                    349 ;	 function lcd_wait_ready
                                    350 ;	-----------------------------------------
      0005D9                        351 _lcd_wait_ready:
                           000007   352 	ar7 = 0x07
                           000006   353 	ar6 = 0x06
                           000005   354 	ar5 = 0x05
                           000004   355 	ar4 = 0x04
                           000003   356 	ar3 = 0x03
                           000002   357 	ar2 = 0x02
                           000001   358 	ar1 = 0x01
                           000000   359 	ar0 = 0x00
                                    360 ;	lcd1602.c:7: LCD1602_DB = 0xFF;
      0005D9 75 80 FF         [24]  361 	mov	_P0,#0xff
                                    362 ;	lcd1602.c:8: LCD1602_RS = 0;
                                    363 ;	assignBit
      0005DC C2 90            [12]  364 	clr	_P1_0
                                    365 ;	lcd1602.c:9: LCD1602_RW = 1;
                                    366 ;	assignBit
      0005DE D2 91            [12]  367 	setb	_P1_1
                                    368 ;	lcd1602.c:10: do {
      0005E0                        369 00101$:
                                    370 ;	lcd1602.c:11: LCD1602_E = 1;
                                    371 ;	assignBit
      0005E0 D2 95            [12]  372 	setb	_P1_5
                                    373 ;	lcd1602.c:12: sta = LCD1602_DB;       /* 读取状态字 */
      0005E2 AF 80            [24]  374 	mov	r7,_P0
                                    375 ;	lcd1602.c:13: LCD1602_E = 0;
                                    376 ;	assignBit
      0005E4 C2 95            [12]  377 	clr	_P1_5
                                    378 ;	lcd1602.c:14: } while (sta & 0x80);       /* bit7等于1表示液晶很忙 */
      0005E6 EF               [12]  379 	mov	a,r7
      0005E7 20 E7 F6         [24]  380 	jb	acc.7,00101$
                                    381 ;	lcd1602.c:15: }
      0005EA 22               [24]  382 	ret
                                    383 ;------------------------------------------------------------
                                    384 ;Allocation info for local variables in function 'lcd_write_cmd'
                                    385 ;------------------------------------------------------------
                                    386 ;cmd                       Allocated to registers r7 
                                    387 ;------------------------------------------------------------
                                    388 ;	lcd1602.c:18: void lcd_write_cmd(unsigned char cmd)
                                    389 ;	-----------------------------------------
                                    390 ;	 function lcd_write_cmd
                                    391 ;	-----------------------------------------
      0005EB                        392 _lcd_write_cmd:
      0005EB AF 82            [24]  393 	mov	r7,dpl
                                    394 ;	lcd1602.c:20: lcd_wait_ready();
      0005ED C0 07            [24]  395 	push	ar7
      0005EF 12 05 D9         [24]  396 	lcall	_lcd_wait_ready
      0005F2 D0 07            [24]  397 	pop	ar7
                                    398 ;	lcd1602.c:21: LCD1602_RS = 0;
                                    399 ;	assignBit
      0005F4 C2 90            [12]  400 	clr	_P1_0
                                    401 ;	lcd1602.c:22: LCD1602_RW = 0;
                                    402 ;	assignBit
      0005F6 C2 91            [12]  403 	clr	_P1_1
                                    404 ;	lcd1602.c:23: LCD1602_DB = cmd;
      0005F8 8F 80            [24]  405 	mov	_P0,r7
                                    406 ;	lcd1602.c:24: LCD1602_E = 1;
                                    407 ;	assignBit
      0005FA D2 95            [12]  408 	setb	_P1_5
                                    409 ;	lcd1602.c:25: LCD1602_E = 0;
                                    410 ;	assignBit
      0005FC C2 95            [12]  411 	clr	_P1_5
                                    412 ;	lcd1602.c:26: }
      0005FE 22               [24]  413 	ret
                                    414 ;------------------------------------------------------------
                                    415 ;Allocation info for local variables in function 'lcd_write_dat'
                                    416 ;------------------------------------------------------------
                                    417 ;dat                       Allocated to registers r7 
                                    418 ;------------------------------------------------------------
                                    419 ;	lcd1602.c:29: void lcd_write_dat(unsigned char dat)
                                    420 ;	-----------------------------------------
                                    421 ;	 function lcd_write_dat
                                    422 ;	-----------------------------------------
      0005FF                        423 _lcd_write_dat:
      0005FF AF 82            [24]  424 	mov	r7,dpl
                                    425 ;	lcd1602.c:31: lcd_wait_ready();
      000601 C0 07            [24]  426 	push	ar7
      000603 12 05 D9         [24]  427 	lcall	_lcd_wait_ready
      000606 D0 07            [24]  428 	pop	ar7
                                    429 ;	lcd1602.c:32: LCD1602_RS = 1;
                                    430 ;	assignBit
      000608 D2 90            [12]  431 	setb	_P1_0
                                    432 ;	lcd1602.c:33: LCD1602_RW = 0;
                                    433 ;	assignBit
      00060A C2 91            [12]  434 	clr	_P1_1
                                    435 ;	lcd1602.c:34: LCD1602_DB = dat;
      00060C 8F 80            [24]  436 	mov	_P0,r7
                                    437 ;	lcd1602.c:35: LCD1602_E = 1;
                                    438 ;	assignBit
      00060E D2 95            [12]  439 	setb	_P1_5
                                    440 ;	lcd1602.c:36: LCD1602_E = 0;
                                    441 ;	assignBit
      000610 C2 95            [12]  442 	clr	_P1_5
                                    443 ;	lcd1602.c:37: }
      000612 22               [24]  444 	ret
                                    445 ;------------------------------------------------------------
                                    446 ;Allocation info for local variables in function 'lcd_set_cursor'
                                    447 ;------------------------------------------------------------
                                    448 ;y                         Allocated with name '_lcd_set_cursor_PARM_2'
                                    449 ;x                         Allocated to registers r7 
                                    450 ;addr                      Allocated to registers r6 
                                    451 ;------------------------------------------------------------
                                    452 ;	lcd1602.c:40: void lcd_set_cursor(unsigned char x, unsigned char y)
                                    453 ;	-----------------------------------------
                                    454 ;	 function lcd_set_cursor
                                    455 ;	-----------------------------------------
      000613                        456 _lcd_set_cursor:
      000613 AF 82            [24]  457 	mov	r7,dpl
                                    458 ;	lcd1602.c:44: if (y == 0)                 /* 由输入的屏幕坐标计算显示RAM的地址 */
      000615 E5 15            [12]  459 	mov	a,_lcd_set_cursor_PARM_2
      000617 70 04            [24]  460 	jnz	00102$
                                    461 ;	lcd1602.c:45: addr = 0x00 + x;        /* 第一行地址从0x00开始 */
      000619 8F 06            [24]  462 	mov	ar6,r7
      00061B 80 04            [24]  463 	sjmp	00103$
      00061D                        464 00102$:
                                    465 ;	lcd1602.c:47: addr = 0x40 + x;        /* 第二行地址从0x40开始 */
      00061D 74 40            [12]  466 	mov	a,#0x40
      00061F 2F               [12]  467 	add	a,r7
      000620 FE               [12]  468 	mov	r6,a
      000621                        469 00103$:
                                    470 ;	lcd1602.c:48: lcd_write_cmd(addr | 0x80); /* 设置RAM地址 */
      000621 43 06 80         [24]  471 	orl	ar6,#0x80
      000624 8E 82            [24]  472 	mov	dpl,r6
                                    473 ;	lcd1602.c:49: }
      000626 02 05 EB         [24]  474 	ljmp	_lcd_write_cmd
                                    475 ;------------------------------------------------------------
                                    476 ;Allocation info for local variables in function 'lcd_show_str'
                                    477 ;------------------------------------------------------------
                                    478 ;y                         Allocated with name '_lcd_show_str_PARM_2'
                                    479 ;str                       Allocated with name '_lcd_show_str_PARM_3'
                                    480 ;x                         Allocated to registers 
                                    481 ;------------------------------------------------------------
                                    482 ;	lcd1602.c:52: void lcd_show_str(unsigned char x, unsigned char y, unsigned char *str)
                                    483 ;	-----------------------------------------
                                    484 ;	 function lcd_show_str
                                    485 ;	-----------------------------------------
      000629                        486 _lcd_show_str:
                                    487 ;	lcd1602.c:54: lcd_set_cursor(x, y);       /* 设置开始的地址 */
      000629 85 16 15         [24]  488 	mov	_lcd_set_cursor_PARM_2,_lcd_show_str_PARM_2
      00062C 12 06 13         [24]  489 	lcall	_lcd_set_cursor
                                    490 ;	lcd1602.c:55: while (*str != '\0')        /* 连续写入字符串数据，直到检测到结束符 */
      00062F AD 17            [24]  491 	mov	r5,_lcd_show_str_PARM_3
      000631 AE 18            [24]  492 	mov	r6,(_lcd_show_str_PARM_3 + 1)
      000633 AF 19            [24]  493 	mov	r7,(_lcd_show_str_PARM_3 + 2)
      000635                        494 00101$:
      000635 8D 82            [24]  495 	mov	dpl,r5
      000637 8E 83            [24]  496 	mov	dph,r6
      000639 8F F0            [24]  497 	mov	b,r7
      00063B 12 0B AB         [24]  498 	lcall	__gptrget
      00063E FC               [12]  499 	mov	r4,a
      00063F 60 18            [24]  500 	jz	00104$
                                    501 ;	lcd1602.c:57: lcd_write_dat(*str++);  /* 先取str指向的数据，然后str自加1 */
      000641 8C 82            [24]  502 	mov	dpl,r4
      000643 0D               [12]  503 	inc	r5
      000644 BD 00 01         [24]  504 	cjne	r5,#0x00,00116$
      000647 0E               [12]  505 	inc	r6
      000648                        506 00116$:
      000648 C0 07            [24]  507 	push	ar7
      00064A C0 06            [24]  508 	push	ar6
      00064C C0 05            [24]  509 	push	ar5
      00064E 12 05 FF         [24]  510 	lcall	_lcd_write_dat
      000651 D0 05            [24]  511 	pop	ar5
      000653 D0 06            [24]  512 	pop	ar6
      000655 D0 07            [24]  513 	pop	ar7
      000657 80 DC            [24]  514 	sjmp	00101$
      000659                        515 00104$:
                                    516 ;	lcd1602.c:59: }
      000659 22               [24]  517 	ret
                                    518 ;------------------------------------------------------------
                                    519 ;Allocation info for local variables in function 'init_lcd1602'
                                    520 ;------------------------------------------------------------
                                    521 ;	lcd1602.c:61: void init_lcd1602(void)
                                    522 ;	-----------------------------------------
                                    523 ;	 function init_lcd1602
                                    524 ;	-----------------------------------------
      00065A                        525 _init_lcd1602:
                                    526 ;	lcd1602.c:63: lcd_write_cmd(0x38);        /* 16*2显示，5＊7点阵，8位数据接口 */
      00065A 75 82 38         [24]  527 	mov	dpl,#0x38
      00065D 12 05 EB         [24]  528 	lcall	_lcd_write_cmd
                                    529 ;	lcd1602.c:64: lcd_write_cmd(0x0C);        /* 显示器开，光标关闭 */
      000660 75 82 0C         [24]  530 	mov	dpl,#0x0c
      000663 12 05 EB         [24]  531 	lcall	_lcd_write_cmd
                                    532 ;	lcd1602.c:65: lcd_write_cmd(0x06);        /* 文字不动，地址自动+1 */
      000666 75 82 06         [24]  533 	mov	dpl,#0x06
      000669 12 05 EB         [24]  534 	lcall	_lcd_write_cmd
                                    535 ;	lcd1602.c:66: lcd_write_cmd(0x01);        /* 清屏 */
      00066C 75 82 01         [24]  536 	mov	dpl,#0x01
                                    537 ;	lcd1602.c:67: }
      00066F 02 05 EB         [24]  538 	ljmp	_lcd_write_cmd
                                    539 	.area CSEG    (CODE)
                                    540 	.area CONST   (CODE)
                                    541 	.area XINIT   (CODE)
                                    542 	.area CABS    (ABS,CODE)
