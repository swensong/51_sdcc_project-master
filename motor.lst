                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.8.0 #10562 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module motor
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TF2
                                     12 	.globl _EXF2
                                     13 	.globl _RCLK
                                     14 	.globl _TCLK
                                     15 	.globl _EXEN2
                                     16 	.globl _TR2
                                     17 	.globl _C_T2
                                     18 	.globl _CP_RL2
                                     19 	.globl _T2CON_7
                                     20 	.globl _T2CON_6
                                     21 	.globl _T2CON_5
                                     22 	.globl _T2CON_4
                                     23 	.globl _T2CON_3
                                     24 	.globl _T2CON_2
                                     25 	.globl _T2CON_1
                                     26 	.globl _T2CON_0
                                     27 	.globl _PT2
                                     28 	.globl _ET2
                                     29 	.globl _CY
                                     30 	.globl _AC
                                     31 	.globl _F0
                                     32 	.globl _RS1
                                     33 	.globl _RS0
                                     34 	.globl _OV
                                     35 	.globl _F1
                                     36 	.globl _P
                                     37 	.globl _PS
                                     38 	.globl _PT1
                                     39 	.globl _PX1
                                     40 	.globl _PT0
                                     41 	.globl _PX0
                                     42 	.globl _RD
                                     43 	.globl _WR
                                     44 	.globl _T1
                                     45 	.globl _T0
                                     46 	.globl _INT1
                                     47 	.globl _INT0
                                     48 	.globl _TXD
                                     49 	.globl _RXD
                                     50 	.globl _P3_7
                                     51 	.globl _P3_6
                                     52 	.globl _P3_5
                                     53 	.globl _P3_4
                                     54 	.globl _P3_3
                                     55 	.globl _P3_2
                                     56 	.globl _P3_1
                                     57 	.globl _P3_0
                                     58 	.globl _EA
                                     59 	.globl _ES
                                     60 	.globl _ET1
                                     61 	.globl _EX1
                                     62 	.globl _ET0
                                     63 	.globl _EX0
                                     64 	.globl _P2_7
                                     65 	.globl _P2_6
                                     66 	.globl _P2_5
                                     67 	.globl _P2_4
                                     68 	.globl _P2_3
                                     69 	.globl _P2_2
                                     70 	.globl _P2_1
                                     71 	.globl _P2_0
                                     72 	.globl _SM0
                                     73 	.globl _SM1
                                     74 	.globl _SM2
                                     75 	.globl _REN
                                     76 	.globl _TB8
                                     77 	.globl _RB8
                                     78 	.globl _TI
                                     79 	.globl _RI
                                     80 	.globl _P1_7
                                     81 	.globl _P1_6
                                     82 	.globl _P1_5
                                     83 	.globl _P1_4
                                     84 	.globl _P1_3
                                     85 	.globl _P1_2
                                     86 	.globl _P1_1
                                     87 	.globl _P1_0
                                     88 	.globl _TF1
                                     89 	.globl _TR1
                                     90 	.globl _TF0
                                     91 	.globl _TR0
                                     92 	.globl _IE1
                                     93 	.globl _IT1
                                     94 	.globl _IE0
                                     95 	.globl _IT0
                                     96 	.globl _P0_7
                                     97 	.globl _P0_6
                                     98 	.globl _P0_5
                                     99 	.globl _P0_4
                                    100 	.globl _P0_3
                                    101 	.globl _P0_2
                                    102 	.globl _P0_1
                                    103 	.globl _P0_0
                                    104 	.globl _TH2
                                    105 	.globl _TL2
                                    106 	.globl _RCAP2H
                                    107 	.globl _RCAP2L
                                    108 	.globl _T2CON
                                    109 	.globl _B
                                    110 	.globl _ACC
                                    111 	.globl _PSW
                                    112 	.globl _IP
                                    113 	.globl _P3
                                    114 	.globl _IE
                                    115 	.globl _P2
                                    116 	.globl _SBUF
                                    117 	.globl _SCON
                                    118 	.globl _P1
                                    119 	.globl _TH1
                                    120 	.globl _TH0
                                    121 	.globl _TL1
                                    122 	.globl _TL0
                                    123 	.globl _TMOD
                                    124 	.globl _TCON
                                    125 	.globl _PCON
                                    126 	.globl _DPH
                                    127 	.globl _DPL
                                    128 	.globl _SP
                                    129 	.globl _P0
                                    130 	.globl _beats
                                    131 	.globl _beat_code
                                    132 	.globl _start_motor
                                    133 	.globl _stop_motor
                                    134 	.globl _motor_scan
                                    135 ;--------------------------------------------------------
                                    136 ; special function registers
                                    137 ;--------------------------------------------------------
                                    138 	.area RSEG    (ABS,DATA)
      000000                        139 	.org 0x0000
                           000080   140 _P0	=	0x0080
                           000081   141 _SP	=	0x0081
                           000082   142 _DPL	=	0x0082
                           000083   143 _DPH	=	0x0083
                           000087   144 _PCON	=	0x0087
                           000088   145 _TCON	=	0x0088
                           000089   146 _TMOD	=	0x0089
                           00008A   147 _TL0	=	0x008a
                           00008B   148 _TL1	=	0x008b
                           00008C   149 _TH0	=	0x008c
                           00008D   150 _TH1	=	0x008d
                           000090   151 _P1	=	0x0090
                           000098   152 _SCON	=	0x0098
                           000099   153 _SBUF	=	0x0099
                           0000A0   154 _P2	=	0x00a0
                           0000A8   155 _IE	=	0x00a8
                           0000B0   156 _P3	=	0x00b0
                           0000B8   157 _IP	=	0x00b8
                           0000D0   158 _PSW	=	0x00d0
                           0000E0   159 _ACC	=	0x00e0
                           0000F0   160 _B	=	0x00f0
                           0000C8   161 _T2CON	=	0x00c8
                           0000CA   162 _RCAP2L	=	0x00ca
                           0000CB   163 _RCAP2H	=	0x00cb
                           0000CC   164 _TL2	=	0x00cc
                           0000CD   165 _TH2	=	0x00cd
                                    166 ;--------------------------------------------------------
                                    167 ; special function bits
                                    168 ;--------------------------------------------------------
                                    169 	.area RSEG    (ABS,DATA)
      000000                        170 	.org 0x0000
                           000080   171 _P0_0	=	0x0080
                           000081   172 _P0_1	=	0x0081
                           000082   173 _P0_2	=	0x0082
                           000083   174 _P0_3	=	0x0083
                           000084   175 _P0_4	=	0x0084
                           000085   176 _P0_5	=	0x0085
                           000086   177 _P0_6	=	0x0086
                           000087   178 _P0_7	=	0x0087
                           000088   179 _IT0	=	0x0088
                           000089   180 _IE0	=	0x0089
                           00008A   181 _IT1	=	0x008a
                           00008B   182 _IE1	=	0x008b
                           00008C   183 _TR0	=	0x008c
                           00008D   184 _TF0	=	0x008d
                           00008E   185 _TR1	=	0x008e
                           00008F   186 _TF1	=	0x008f
                           000090   187 _P1_0	=	0x0090
                           000091   188 _P1_1	=	0x0091
                           000092   189 _P1_2	=	0x0092
                           000093   190 _P1_3	=	0x0093
                           000094   191 _P1_4	=	0x0094
                           000095   192 _P1_5	=	0x0095
                           000096   193 _P1_6	=	0x0096
                           000097   194 _P1_7	=	0x0097
                           000098   195 _RI	=	0x0098
                           000099   196 _TI	=	0x0099
                           00009A   197 _RB8	=	0x009a
                           00009B   198 _TB8	=	0x009b
                           00009C   199 _REN	=	0x009c
                           00009D   200 _SM2	=	0x009d
                           00009E   201 _SM1	=	0x009e
                           00009F   202 _SM0	=	0x009f
                           0000A0   203 _P2_0	=	0x00a0
                           0000A1   204 _P2_1	=	0x00a1
                           0000A2   205 _P2_2	=	0x00a2
                           0000A3   206 _P2_3	=	0x00a3
                           0000A4   207 _P2_4	=	0x00a4
                           0000A5   208 _P2_5	=	0x00a5
                           0000A6   209 _P2_6	=	0x00a6
                           0000A7   210 _P2_7	=	0x00a7
                           0000A8   211 _EX0	=	0x00a8
                           0000A9   212 _ET0	=	0x00a9
                           0000AA   213 _EX1	=	0x00aa
                           0000AB   214 _ET1	=	0x00ab
                           0000AC   215 _ES	=	0x00ac
                           0000AF   216 _EA	=	0x00af
                           0000B0   217 _P3_0	=	0x00b0
                           0000B1   218 _P3_1	=	0x00b1
                           0000B2   219 _P3_2	=	0x00b2
                           0000B3   220 _P3_3	=	0x00b3
                           0000B4   221 _P3_4	=	0x00b4
                           0000B5   222 _P3_5	=	0x00b5
                           0000B6   223 _P3_6	=	0x00b6
                           0000B7   224 _P3_7	=	0x00b7
                           0000B0   225 _RXD	=	0x00b0
                           0000B1   226 _TXD	=	0x00b1
                           0000B2   227 _INT0	=	0x00b2
                           0000B3   228 _INT1	=	0x00b3
                           0000B4   229 _T0	=	0x00b4
                           0000B5   230 _T1	=	0x00b5
                           0000B6   231 _WR	=	0x00b6
                           0000B7   232 _RD	=	0x00b7
                           0000B8   233 _PX0	=	0x00b8
                           0000B9   234 _PT0	=	0x00b9
                           0000BA   235 _PX1	=	0x00ba
                           0000BB   236 _PT1	=	0x00bb
                           0000BC   237 _PS	=	0x00bc
                           0000D0   238 _P	=	0x00d0
                           0000D1   239 _F1	=	0x00d1
                           0000D2   240 _OV	=	0x00d2
                           0000D3   241 _RS0	=	0x00d3
                           0000D4   242 _RS1	=	0x00d4
                           0000D5   243 _F0	=	0x00d5
                           0000D6   244 _AC	=	0x00d6
                           0000D7   245 _CY	=	0x00d7
                           0000AD   246 _ET2	=	0x00ad
                           0000BD   247 _PT2	=	0x00bd
                           0000C8   248 _T2CON_0	=	0x00c8
                           0000C9   249 _T2CON_1	=	0x00c9
                           0000CA   250 _T2CON_2	=	0x00ca
                           0000CB   251 _T2CON_3	=	0x00cb
                           0000CC   252 _T2CON_4	=	0x00cc
                           0000CD   253 _T2CON_5	=	0x00cd
                           0000CE   254 _T2CON_6	=	0x00ce
                           0000CF   255 _T2CON_7	=	0x00cf
                           0000C8   256 _CP_RL2	=	0x00c8
                           0000C9   257 _C_T2	=	0x00c9
                           0000CA   258 _TR2	=	0x00ca
                           0000CB   259 _EXEN2	=	0x00cb
                           0000CC   260 _TCLK	=	0x00cc
                           0000CD   261 _RCLK	=	0x00cd
                           0000CE   262 _EXF2	=	0x00ce
                           0000CF   263 _TF2	=	0x00cf
                                    264 ;--------------------------------------------------------
                                    265 ; overlayable register banks
                                    266 ;--------------------------------------------------------
                                    267 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        268 	.ds 8
                                    269 ;--------------------------------------------------------
                                    270 ; internal ram data
                                    271 ;--------------------------------------------------------
                                    272 	.area DSEG    (DATA)
      000000                        273 _beat_code::
      000000                        274 	.ds 8
      000008                        275 _beats::
      000008                        276 	.ds 4
      00000C                        277 _motor_scan_index_65536_9:
      00000C                        278 	.ds 1
                                    279 ;--------------------------------------------------------
                                    280 ; overlayable items in internal ram 
                                    281 ;--------------------------------------------------------
                                    282 	.area	OSEG    (OVR,DATA)
                                    283 ;--------------------------------------------------------
                                    284 ; indirectly addressable internal ram data
                                    285 ;--------------------------------------------------------
                                    286 	.area ISEG    (DATA)
                                    287 ;--------------------------------------------------------
                                    288 ; absolute internal ram data
                                    289 ;--------------------------------------------------------
                                    290 	.area IABS    (ABS,DATA)
                                    291 	.area IABS    (ABS,DATA)
                                    292 ;--------------------------------------------------------
                                    293 ; bit data
                                    294 ;--------------------------------------------------------
                                    295 	.area BSEG    (BIT)
                                    296 ;--------------------------------------------------------
                                    297 ; paged external ram data
                                    298 ;--------------------------------------------------------
                                    299 	.area PSEG    (PAG,XDATA)
                                    300 ;--------------------------------------------------------
                                    301 ; external ram data
                                    302 ;--------------------------------------------------------
                                    303 	.area XSEG    (XDATA)
                                    304 ;--------------------------------------------------------
                                    305 ; absolute external ram data
                                    306 ;--------------------------------------------------------
                                    307 	.area XABS    (ABS,XDATA)
                                    308 ;--------------------------------------------------------
                                    309 ; external initialized ram data
                                    310 ;--------------------------------------------------------
                                    311 	.area XISEG   (XDATA)
                                    312 	.area HOME    (CODE)
                                    313 	.area GSINIT0 (CODE)
                                    314 	.area GSINIT1 (CODE)
                                    315 	.area GSINIT2 (CODE)
                                    316 	.area GSINIT3 (CODE)
                                    317 	.area GSINIT4 (CODE)
                                    318 	.area GSINIT5 (CODE)
                                    319 	.area GSINIT  (CODE)
                                    320 	.area GSFINAL (CODE)
                                    321 	.area CSEG    (CODE)
                                    322 ;--------------------------------------------------------
                                    323 ; global & static initialisations
                                    324 ;--------------------------------------------------------
                                    325 	.area HOME    (CODE)
                                    326 	.area GSINIT  (CODE)
                                    327 	.area GSFINAL (CODE)
                                    328 	.area GSINIT  (CODE)
                                    329 ;------------------------------------------------------------
                                    330 ;Allocation info for local variables in function 'motor_scan'
                                    331 ;------------------------------------------------------------
                                    332 ;index                     Allocated with name '_motor_scan_index_65536_9'
                                    333 ;tmp                       Allocated to registers r7 
                                    334 ;------------------------------------------------------------
                                    335 ;	motor.c:24: static unsigned char index = 0; /* 节拍输出索引 */
      000000 75*0C 00         [24]  336 	mov	_motor_scan_index_65536_9,#0x00
                                    337 ;	motor.c:3: unsigned char beat_code[8] = {  /* 步进电机节拍对应的IO控制代码 */
      000003 75*00 0E         [24]  338 	mov	_beat_code,#0x0e
      000006 75*01 0C         [24]  339 	mov	(_beat_code + 0x0001),#0x0c
      000009 75*02 0D         [24]  340 	mov	(_beat_code + 0x0002),#0x0d
      00000C 75*03 09         [24]  341 	mov	(_beat_code + 0x0003),#0x09
      00000F 75*04 0B         [24]  342 	mov	(_beat_code + 0x0004),#0x0b
      000012 75*05 03         [24]  343 	mov	(_beat_code + 0x0005),#0x03
      000015 75*06 07         [24]  344 	mov	(_beat_code + 0x0006),#0x07
      000018 75*07 06         [24]  345 	mov	(_beat_code + 0x0007),#0x06
                                    346 ;	motor.c:7: unsigned long beats = 0;        /* 电机转动节拍总数 */
      00001B E4               [12]  347 	clr	a
      00001C F5*08            [12]  348 	mov	_beats,a
      00001E F5*09            [12]  349 	mov	(_beats + 1),a
      000020 F5*0A            [12]  350 	mov	(_beats + 2),a
      000022 F5*0B            [12]  351 	mov	(_beats + 3),a
                                    352 ;--------------------------------------------------------
                                    353 ; Home
                                    354 ;--------------------------------------------------------
                                    355 	.area HOME    (CODE)
                                    356 	.area HOME    (CODE)
                                    357 ;--------------------------------------------------------
                                    358 ; code
                                    359 ;--------------------------------------------------------
                                    360 	.area CSEG    (CODE)
                                    361 ;------------------------------------------------------------
                                    362 ;Allocation info for local variables in function 'start_motor'
                                    363 ;------------------------------------------------------------
                                    364 ;angle                     Allocated to registers r4 r5 r6 r7 
                                    365 ;------------------------------------------------------------
                                    366 ;	motor.c:9: void start_motor(unsigned long angle)
                                    367 ;	-----------------------------------------
                                    368 ;	 function start_motor
                                    369 ;	-----------------------------------------
      000000                        370 _start_motor:
                           000007   371 	ar7 = 0x07
                           000006   372 	ar6 = 0x06
                           000005   373 	ar5 = 0x05
                           000004   374 	ar4 = 0x04
                           000003   375 	ar3 = 0x03
                           000002   376 	ar2 = 0x02
                           000001   377 	ar1 = 0x01
                           000000   378 	ar0 = 0x00
      000000 AC 82            [24]  379 	mov	r4,dpl
      000002 AD 83            [24]  380 	mov	r5,dph
      000004 AE F0            [24]  381 	mov	r6,b
      000006 FF               [12]  382 	mov	r7,a
                                    383 ;	motor.c:11: EA = 0;
                                    384 ;	assignBit
      000007 C2 AF            [12]  385 	clr	_EA
                                    386 ;	motor.c:12: beats = (angle * 4076) / 360;
      000009 8C*00            [24]  387 	mov	__mullong_PARM_2,r4
      00000B 8D*01            [24]  388 	mov	(__mullong_PARM_2 + 1),r5
      00000D 8E*02            [24]  389 	mov	(__mullong_PARM_2 + 2),r6
      00000F 8F*03            [24]  390 	mov	(__mullong_PARM_2 + 3),r7
      000011 90 0F EC         [24]  391 	mov	dptr,#0x0fec
      000014 E4               [12]  392 	clr	a
      000015 F5 F0            [12]  393 	mov	b,a
      000017 12r00r00         [24]  394 	lcall	__mullong
      00001A AC 82            [24]  395 	mov	r4,dpl
      00001C AD 83            [24]  396 	mov	r5,dph
      00001E AE F0            [24]  397 	mov	r6,b
      000020 FF               [12]  398 	mov	r7,a
      000021 75*00 68         [24]  399 	mov	__divulong_PARM_2,#0x68
      000024 75*01 01         [24]  400 	mov	(__divulong_PARM_2 + 1),#0x01
      000027 E4               [12]  401 	clr	a
      000028 F5*02            [12]  402 	mov	(__divulong_PARM_2 + 2),a
      00002A F5*03            [12]  403 	mov	(__divulong_PARM_2 + 3),a
      00002C 8C 82            [24]  404 	mov	dpl,r4
      00002E 8D 83            [24]  405 	mov	dph,r5
      000030 8E F0            [24]  406 	mov	b,r6
      000032 EF               [12]  407 	mov	a,r7
      000033 12r00r00         [24]  408 	lcall	__divulong
      000036 85 82*08         [24]  409 	mov	_beats,dpl
      000039 85 83*09         [24]  410 	mov	(_beats + 1),dph
      00003C 85 F0*0A         [24]  411 	mov	(_beats + 2),b
      00003F F5*0B            [12]  412 	mov	(_beats + 3),a
                                    413 ;	motor.c:13: EA = 1;
                                    414 ;	assignBit
      000041 D2 AF            [12]  415 	setb	_EA
                                    416 ;	motor.c:14: }
      000043 22               [24]  417 	ret
                                    418 ;------------------------------------------------------------
                                    419 ;Allocation info for local variables in function 'stop_motor'
                                    420 ;------------------------------------------------------------
                                    421 ;	motor.c:16: void stop_motor(void)
                                    422 ;	-----------------------------------------
                                    423 ;	 function stop_motor
                                    424 ;	-----------------------------------------
      000044                        425 _stop_motor:
                                    426 ;	motor.c:18: beats = 0;
      000044 E4               [12]  427 	clr	a
      000045 F5*08            [12]  428 	mov	_beats,a
      000047 F5*09            [12]  429 	mov	(_beats + 1),a
      000049 F5*0A            [12]  430 	mov	(_beats + 2),a
      00004B F5*0B            [12]  431 	mov	(_beats + 3),a
                                    432 ;	motor.c:19: }
      00004D 22               [24]  433 	ret
                                    434 ;------------------------------------------------------------
                                    435 ;Allocation info for local variables in function 'motor_scan'
                                    436 ;------------------------------------------------------------
                                    437 ;index                     Allocated with name '_motor_scan_index_65536_9'
                                    438 ;tmp                       Allocated to registers r7 
                                    439 ;------------------------------------------------------------
                                    440 ;	motor.c:21: void motor_scan(void)
                                    441 ;	-----------------------------------------
                                    442 ;	 function motor_scan
                                    443 ;	-----------------------------------------
      00004E                        444 _motor_scan:
                                    445 ;	motor.c:25: if (beats != 0)             /* 节拍数不为0则产生一个驱动节拍 */
      00004E E5*08            [12]  446 	mov	a,_beats
      000050 45*09            [12]  447 	orl	a,(_beats + 1)
      000052 45*0A            [12]  448 	orl	a,(_beats + 2)
      000054 45*0B            [12]  449 	orl	a,(_beats + 3)
      000056 60 27            [24]  450 	jz	00102$
                                    451 ;	motor.c:27: tmp = P1;               /* 用tmp把P1口当前值缓存 */
      000058 E5 90            [12]  452 	mov	a,_P1
                                    453 ;	motor.c:28: tmp = tmp & 0xF0;       /* 用＆操作清零低4位 */
      00005A 54 F0            [12]  454 	anl	a,#0xf0
      00005C FF               [12]  455 	mov	r7,a
                                    456 ;	motor.c:29: tmp = tmp | beat_code[index]; /* 用｜操作把节拍写到低4位 */
      00005D E5*0C            [12]  457 	mov	a,_motor_scan_index_65536_9
      00005F 24r00            [12]  458 	add	a,#_beat_code
      000061 F9               [12]  459 	mov	r1,a
      000062 E7               [12]  460 	mov	a,@r1
      000063 4F               [12]  461 	orl	a,r7
      000064 F5 90            [12]  462 	mov	_P1,a
                                    463 ;	motor.c:31: index++;                      /* 节拍输出索引递增 */
      000066 05*0C            [12]  464 	inc	_motor_scan_index_65536_9
                                    465 ;	motor.c:32: index = index & 0x07;         /* 用＆操作实现到8归零 */
      000068 53*0C 07         [24]  466 	anl	_motor_scan_index_65536_9,#0x07
                                    467 ;	motor.c:33: beats--;
      00006B 15*08            [12]  468 	dec	_beats
      00006D 74 FF            [12]  469 	mov	a,#0xff
      00006F B5*08 0C         [24]  470 	cjne	a,_beats,00112$
      000072 15*09            [12]  471 	dec	(_beats + 1)
      000074 B5*09 07         [24]  472 	cjne	a,(_beats + 1),00112$
      000077 15*0A            [12]  473 	dec	(_beats + 2)
      000079 B5*0A 02         [24]  474 	cjne	a,(_beats + 2),00112$
      00007C 15*0B            [12]  475 	dec	(_beats + 3)
      00007E                        476 00112$:
      00007E 22               [24]  477 	ret
      00007F                        478 00102$:
                                    479 ;	motor.c:37: P1 = P1 | 0x0F;
      00007F AE 90            [24]  480 	mov	r6,_P1
      000081 43 06 0F         [24]  481 	orl	ar6,#0x0f
      000084 8E 90            [24]  482 	mov	_P1,r6
                                    483 ;	motor.c:39: }
      000086 22               [24]  484 	ret
                                    485 	.area CSEG    (CODE)
                                    486 	.area CONST   (CODE)
                                    487 	.area XINIT   (CODE)
                                    488 	.area CABS    (ABS,CODE)
